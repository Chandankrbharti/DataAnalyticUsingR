split <- sample.split(PimaIndiansDiabetes$diabetes, SplitRatio = 0.75)
library(caTools)
library(mlbench)
data(PimaIndiansDiabetes)
data("PimaindiansDiabetes")
View(PimaIndiansDiabetes)
split <- sample.split(PimaIndiansDiabetes$diabetes, SplitRatio = 0.75)
traindt <- subset( PimaIndiansDiabetes, split==TRUE)
testdt <- subset(PimaIndiansDiabetes, split == F)
library(rpart)
library(tree)
install.packages("tree")
library(rpart)
library(tree)
dt <- rpart(diabetes~.,traindt)
dt1 <- tree(diabetes~.,traindt)
plot(dt)
plot(dt1)
text(dt)
text(dt1)
View(testdt)
dt1
testdt$predicted_values <- predict(dt1, newdata = testdt, type = "class")
View(testdt)
table(testdt$diabetes)
table(testdt$predicted_values, testdt$diabetes)
(118+36)/(192) # Accuracy
(31+7)/(192) # Missclassification
(36)/(36+31)
(36)/(36+7)
install.packages("randomForest")
#install.packages (randomforest)
library(randomForest)
install.packages("leaflet")
library(leaflet)
library(tree)
dim(trainingdata)
dim(traingdata)
dim(traindata)
dim(traindata1)
dim(traindata)
traindata <- read.csv("file:///C:/Users/Administrator/Desktop/Crime_Sample.csv")
is.na(traindata$Community.Area)
colSums(is.na(traindata))
names(traindata)
traindata1 <- traindata[, -c(1,2,14,15,17,18)]
colSums(is.na(traindata2))
colSums(is.na(traindata1))
traindata2 <- traindata1[complete.cases(traindata1),]
mytree <- tree(Primary.Type ~ Latitude + Longitude, data = traindata2)
mytree
plot(mytree)
#plot(dt)
text(mytree)
summary(traindata2)
str(traindata2)
View(traindata2)
myforest <- randomForest(Primary.Type ~ Latitude + Longitude, data = traindata2, test = 500)
plot(myforest)
testdata <- read.csv(""file:///C:/Users/Administrator/Desktop/Crime_Sample.csv"")
testdata <- read.csv("file:///C:/Users/Administrator/Desktop/Crime_Sample.csv")
colSums(is.na(testdata))
testdata1 <- testdata[,-c(1,2,14,15,17,18)]
colSums(is.na(testdata1))
testdata2 <- testdata1[complete.cases(testdata),]
View(testdata)
testdata2$Predicted.Crime<- predict(myforest, newdata = testdata2 , type="class")
Prediction <- predict(myforest, newdata = testdata2, type = "class")
testdata2$Predicted.Crime<- predict(myforest, newdata = testdata2 , type="class")
View(testdata2)
dim(testdata2)
names(testdata2)
str(testdata2)
View(testdata2)
gviz <- leaflet(data = testdata2)
gviz <- addTiles(gviz)
gviz <- addMarkers(gviz, ~Longitude, ~Latitude, popup = ~as.character(testdata2$Predicted.Crime))
gviz
install.packages("plotly")
library(plotly)
library(plotly)
time_series<-plot_ly(x= testdata2$Year,y= testdata2$Primary.Type == 'THEFT',type="lines",mode="lines")
time_series
#defining labels and titile using layout()
layout(time_seies,title = "AirPassengers Dataset - Time Series Plot",
xaxis = list(title = "Time"),
yaxis = list(title = "Passengers"))
quality <- read.csv(file:///C:/Users/Administrator/Desktop/3rdDay_Exercises/Logistic Regression_Codes.docx)
quality <- read.csv("file:///C:/Users/Administrator/Desktop/3rdDay_Exercises/Logistic Regression_Codes.docx")
time_series <- plot_ly(x= testdata2$Year,y= testdata2$Primary.Type == 'THEFT',type="lines",mode="lines")
time_series
